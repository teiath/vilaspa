{% extends 'VispanlabSiteBundle::base.html.twig' %}

{% import _self as exercisestwig %}

{% block content %}
<div class="row text-center virtual-exercises">
    <div class="col-md-12">
        <h2 style="margin-top: 0;">{{area_of_expertise.name(app.request.locale)|raw|replace({'<BR />': ' '})|raw}}</h2>
        <h4>{{subject_area.name(app.request.locale)}}</h4>
        <h4>{{('virtual_exercises.'~type)|trans}}<hr style="margin-bottom: 10px;" /></h4>
        <div class="row">
            <div class="col-md-offset-3 col-md-6">
                <form>
                    <table class="table table-bordered ve-table">
                    {% for exercise in (exercises|shuffle) %}
                        <tr><td>{{exercisestwig.displayExercise(exercise)}}</td></tr>
                    {% endfor %}
                    </table>
                </form>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% macro displayExercise(exercise) %}
    {% import _self as exercisestwig %}
    {% if (exercise|get_class) == 'Vispanlab\\SiteBundle\\Entity\\Exercise\\MultipleChoice' or (exercise|get_class) == 'Vispanlab\\SiteBundle\\Entity\\Exercise\\OnOff' %}
        {{exercisestwig.displayMultipleChoice(exercise)}}
    {% elseif (exercise|get_class) == 'Vispanlab\\SiteBundle\\Entity\\Exercise\\Solved' %}
        {{exercisestwig.displaySolved(exercise)}}
    {% elseif (exercise|get_class) == 'Vispanlab\\SiteBundle\\Entity\\Exercise\\Matching' %}
        {{exercisestwig.displayMatching(exercise)}}
    {% endif %}
{% endmacro %}

{% macro displayMultipleChoice(exercise) %}
    <div class="multiple-choice">
        <h4>{{exercise.question}}</h4>
        <hr />
        <ul>
        {% for answer in (exercise.answers|shuffle) %}
            <li><input type="radio" name="mc-{{exercise.id}}" value="{{answer.answer}}" data-iscorrect="{{answer.is_correct is defined and answer.is_correct ? 'true' : 'false'}}" />{{answer.answer|trans}}</li>
        {% endfor %}
        </ul>
    </div>
{% endmacro %}

{% macro displaySolved(exercise) %}
    <div class="solved">
        <div>
            <h4>{{exercise.question}}</h4>
        </div>
        <hr />
        <div>
            <h4>{{'Data'|trans}}</h4>
            {{exercise.data}}
        </div>
        <hr />
        <div>
            <h4>{{'Requested'|trans}}</h4>
            {{exercise.requested}}
        </div>
        <hr />
        <div>
            <h4>{{'Methodology'|trans}}</h4>
            {{exercise.methodology}}
        </div>
        <hr />
        <div>
            <h4>{{'Solution'|trans}}</h4>
            {{exercise.solution}}
        </div>
        <hr />
        <div>
            <h4>{{'Result'|trans}}</h4>
            {{exercise.result}}
        </div>
    </div>
{% endmacro %}

{% macro displayMatching(exercise) %}
    <div class="row matching">
        <h4>{{exercise.question}}</h4>
        <hr />
        <div class="col-md-6" style="border-right: 1px #CCC solid;">
            <ul>
            {% for answer in (exercise.leftAnswers|shuffle) %}
                <li>{{answer.answer}}</li>
            {% endfor %}
            </ul>
        </div>
        <div class="col-md-6">
            <ol>
            {% for answer in (exercise.rightAnswers|shuffle) %}
                <li>{{answer.answer}}</li>
            {% endfor %}
            </ol>
        </div>
    </div>
{% endmacro %}

{% block javascripts %}
{{parent()}}
<script type="text/javascript">
var cloneExercise = function($exercise) {
    var $table = $exercise.parents('.ve-table');
    var $clone = $exercise.parent().parent().clone(true, true); // Clone the td and tr of the exercise
    jQuery("input[type='checkbox']:not('label.btn>input'), input[type='radio']:not('label.btn>input')", $clone).prop('checked', false);
    if (window.SONATA_CONFIG && window.SONATA_CONFIG.USE_ICHECK) {
        jQuery("input[type='checkbox']:not('label.btn>input'), input[type='radio']:not('label.btn>input')", $clone).iCheck('destroy');
        jQuery("input[type='checkbox']:not('label.btn>input'), input[type='radio']:not('label.btn>input')", $clone).iCheck({
            checkboxClass: 'icheckbox_minimal',
            radioClass: 'iradio_minimal'
        });
    }
    $table.append($clone);
    initMultipleChoice($clone.find('td > div'));
};
var initMultipleChoice = function($this) {
    $this.find("input:radio").on('ifChecked', function () {
        if($(this).attr('data-iscorrect') === 'true') {
            // Correct
            $(this).parent().parent().prepend('<i class="fa fa-check" style="color: green;"></i>');
        } else {
            // Wrong
            cloneExercise($this);
            $(this).parent().parent().prepend('<i class="fa fa-times" style="color: red;"></i>');
        }
        $this.find("input:radio").iCheck('disable');
    });
};
$(document).ready(function() {
    $('.multiple-choice').each(function() { initMultipleChoice($(this)); });
});
</script>
{% endblock %}