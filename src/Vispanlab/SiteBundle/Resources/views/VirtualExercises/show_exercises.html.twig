{% extends 'VispanlabSiteBundle::base.html.twig' %}

{% import _self as exercisestwig %}

{% block content %}
<style>
.select2-no-results {
    display: none !important;
}
</style>
<div class="row text-center virtual-exercises">
    <div class="col-md-12">
        <h2 style="margin-top: 0;">{{area_of_expertise.name(app.request.locale)|raw|replace({'<BR />': ' '})|raw}}</h2>
        {% if subject_area != null %}<h4>{{subject_area.name(app.request.locale)}}</h4>{% endif %}
        <h4>{{('virtual_exercises.'~type)|trans}}<hr style="margin-bottom: 10px;" /></h4>
        <div class="row">
            <div class="col-md-offset-3 col-md-6">
                <form>
                    {% for exercise in (exercises|shuffle) %}
                        {{exercisestwig.displayExercise(exercise)}}
                    {% endfor %}
                </form>
            </div>
        </div>
        {{ knp_pagination_render(exercises) }}
    </div>
</div>
{% endblock %}

{% macro displayExercise(exercise) %}
    {% import _self as exercisestwig %}
    <table class="table table-bordered ve-table text-left">
        <tr><td>
        {% if (exercise|get_class) == 'Vispanlab\\SiteBundle\\Entity\\Exercise\\MultipleChoice' %}
            {{exercisestwig.displayMultipleChoice(exercise)}}
        {% elseif (exercise|get_class) == 'Vispanlab\\SiteBundle\\Entity\\Exercise\\OnOff' %}
            {{exercisestwig.displayOnOff(exercise)}}
        {% elseif (exercise|get_class) == 'Vispanlab\\SiteBundle\\Entity\\Exercise\\Solved' %}
            {{exercisestwig.displaySolved(exercise)}}
        {% elseif (exercise|get_class) == 'Vispanlab\\SiteBundle\\Entity\\Exercise\\Matching' %}
            {{exercisestwig.displayMatching(exercise)}}
        {% elseif (exercise|get_class) == 'Vispanlab\\SiteBundle\\Entity\\Exercise\\ExamPaper' %}
            {{exercisestwig.displayExamPaper(exercise)}}
        {% endif %}
        </td></tr>
    </table>
{% endmacro %}

{% macro displayMultipleChoice(exercise) %}
    <div class="multiple-choice">
        <h4 class="text-center">{{exercise.question}}</h4>
        <hr />
        <ul>
        {% for answer in (exercise.answers|shuffle) %}
            <li>
                <div class="row">
                    <div class="col-md-1"><input type="radio" id="mc-{{exercise.id}}-{{loop.index}}" name="mc-{{exercise.id}}" value="{{answer.answer}}" data-iscorrect="{{answer.is_correct is defined and answer.is_correct ? 'true' : 'false'}}" /></div><div class="col-md-11"><label style="font-weight: normal;" for="mc-{{exercise.id}}-{{loop.index}}">{{answer.answer|trans}}</label></div>
                </div>
            </li>
        {% endfor %}
        </ul>
    </div>
{% endmacro %}

{% macro displayOnOff(exercise) %}
    <div class="multiple-choice">
        <h4 class="text-center">{{exercise.question}}</h4>
        <hr />
        <div class="row">
        {% for answer in (exercise.answers|shuffle) %}
            <div class="col-md-6 text-center">
                    <input type="radio" id="mc-{{exercise.id}}-{{loop.index}}" name="mc-{{exercise.id}}" value="{{answer.answer}}" data-iscorrect="{{answer.is_correct is defined and answer.is_correct ? 'true' : 'false'}}" /> <label style="font-weight: normal;" for="mc-{{exercise.id}}-{{loop.index}}">{{answer.answer|trans}}</label>
            </div>
        {% endfor %}
        </div>
    </div>
{% endmacro %}

{% macro displaySolved(exercise) %}
    <div class="solved">
        <div>
            <h4 class="text-center">{{exercise.question}}</h4>
        </div>
        <hr />
        <div>
            <h4 class="text-center">{{'Data'|trans}}</h4>
            {{exercise.data}}
        </div>
        <hr />
        <div>
            <h4 class="text-center">{{'Requested'|trans}}</h4>
            {{exercise.requested}}
        </div>
        <hr />
        <div>
            <h4 class="text-center">{{'Methodology'|trans}}</h4>
            {{exercise.methodology}}
        </div>
        <hr />
        <div>
            <h4 class="text-center">{{'Solution'|trans}}</h4>
            {{exercise.solution}}
        </div>
        <hr />
        <div>
            <h4 class="text-center">{{'Result'|trans}}</h4>
            {{exercise.result}}
        </div>
    </div>
{% endmacro %}

{% macro displayMatching(exercise) %}
    <div class="row matching" style="margin-left: 0; margin-right: 0;">
        <h4 class="text-center">{{exercise.question}}</h4>
        <hr />
        <div class="col-md-6 matching-left" style="border-right: 1px #CCC solid;">
            <ul>
            {% for answer in (exercise.leftAnswers) %}
                <li>
                    <div class="row">
                        <div class="col-md-8">
                            {{answer.answer}}
                        </div>
                        <div class="col-md-3">
                            <select class="matching-token-input" multiple="multiple" data-matches="{{answer.matches}}" style="width: 100%;">
                                {% for answer in exercise.rightAnswers %}
                                    <option value="{{loop.index}}">{{loop.index}}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </li>
            {% endfor %}
            </ul>
        </div>
        <div class="col-md-6 matching-right">
            <ol>
            {% for answer in (exercise.rightAnswers|shuffle) %}
                <li>{{answer.answer}}</li>
            {% endfor %}
            </ol>
        </div>
        <div style="clear: both;">
            <hr />
            <input type="button" class="matching-check btn btn-primary" value="{{'ve_check'|trans}}" />
        </div>
    </div>
{% endmacro %}

{% macro displayExamPaper(exercise) %}
    <div class="exam-paper">
        {#<h4 class="text-center">{{exercise.date|format_date()}}</h4>
        <hr />#}
        <div>
        {{exercise.textFormatted|format_text(exercise.format_type)|raw}}
        </div>
    </div>
{% endmacro %}

{% block javascripts %}
{{parent()}}
<script type="text/javascript">
var arr_diff = function(a1, a2) {
  var a=[], diff=[];
  for(var i=0;i<a1.length;i++)
    a[a1[i]]=true;
  for(var i=0;i<a2.length;i++)
    if(a[a2[i]]) delete a[a2[i]];
    else a[a2[i]]=true;
  for(var k in a)
    diff.push(k);
  return diff;
};
/*var cloneExercise = function($exercise, type, deep) {
    var $table = $exercise.parents('.ve-table');
    var $clone = $exercise.parent().parent().clone(deep, deep); // Clone the td and tr of the exercise
    jQuery("input[type='checkbox']:not('label.btn>input'), input[type='radio']:not('label.btn>input')", $clone).prop('checked', false);
    if (window.SONATA_CONFIG && window.SONATA_CONFIG.USE_ICHECK) {
        jQuery("input[type='checkbox']:not('label.btn>input'), input[type='radio']:not('label.btn>input')", $clone).iCheck('destroy');
        jQuery("input[type='checkbox']:not('label.btn>input'), input[type='radio']:not('label.btn>input')", $clone).iCheck({
            checkboxClass: 'icheckbox_minimal',
            radioClass: 'iradio_minimal'
        });
    }
    $table.append($clone);
    if(type === 'multiple_choice') {
        initMultipleChoice($clone.find('td > div'));
    } else if(type === 'matching') {
        initMatching($clone.find('td > div'));
    } else {
        alert('Error: Unknown exercise type. Please report this.');
    }
};*/
var initMultipleChoice = function($this) {
    $this.find("input:radio").on('ifChecked', function () {
        if($(this).attr('data-iscorrect') === 'true') {
            // Correct
            $(this).parent().parent().prepend('<i class="fa fa-check" style="color: green;"></i>');
            $(this).parents('.ve-table').addClass('ve-correct');
        } else {
            // Wrong
            //cloneExercise($this, 'multiple_choice', true);
            $(this).parent().parent().prepend('<i class="fa fa-times" style="color: red;"></i>');
            $(this).parents('.ve-table').addClass('ve-wrong');
        }
        $this.find("input:radio").iCheck('disable');
    });
    $this.find("input:radio").iCheck('enable');
};
var initMatching = function($this) {
    var select2Options = {
        maximumSelectionLength: Math.ceil($this.find('.matching-right').size()/$this.find('.matching-left').size())
    };
    $this.find('.matching-token-input').val('');
    $this.find('.matching-token-input').each(function() {
        $(this).find("option").removeAttr('disabled');
        $(this).select2(select2Options);
        $(this).select2('enable');
    });
    // Constraints
    var $selects = $this.find('.matching-token-input');
    $selects.on('change', function(e) {
        var selectedValues = $(this).select2('val');
        for (var i = 0; i < selectedValues.length; i++) {
            $selects.not(this).find("option[value='" + selectedValues[i] + "']").attr('disabled', true);
        }
    });
    $selects.on('select2-removed', function(e) {
        $selects.find("option[value='" + e.val + "']").attr('disabled', false);
    });
    // End constraints
    // Validation
    $this.find('.matching-check').on('click', function() {
        var $submit = $(this);
        var correct = true;
        $this.find('select.matching-token-input').each(function() {
            var correctMatches = $(this).attr('data-matches').split(',');
            var selectedMatches = $(this).select2('val');
            var diff = arr_diff(correctMatches, selectedMatches);
            if(diff.length > 0) {
                // Wrong
                correct = false;
            }
        });
        if(correct) {
            $submit.parent().append('<i class="fa fa-check" style="color: green;"></i>');
            $submit.parents('.ve-table').addClass('ve-correct');
            $this.find('.matching-token-input').each(function() { $(this).select2('disable'); });
        } else {
            $this.find('.matching-token-input').each(function() { $(this).select2('destroy'); });
            //cloneExercise($this, 'matching', false);
            $this.find('.matching-token-input').each(function() { $(this).select2(select2Options); $(this).select2('disable'); });
            $submit.parent().append('<i class="fa fa-times" style="color: red;"></i>');
            $submit.parents('.ve-table').addClass('ve-wrong');
        }
        $submit.hide();
    });
    // End validation
};
$(document).ready(function() {
    $('.multiple-choice').each(function() { initMultipleChoice($(this)); });
    $('.matching').each(function() { initMatching($(this)); });
});
</script>
{% endblock %}