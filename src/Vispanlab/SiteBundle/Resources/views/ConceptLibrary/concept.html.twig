{% extends 'VispanlabSiteBundle:ConceptLibrary:concept_library.html.twig' %}

{% block content %}
<div class="row text-center">
    <div class="col-md-12 concept-details">
        <div class="row text-center">
            {% if prev != null %}
            <div class="col-md-6 pull-left text-left" style="border-right: 1px #000 dotted;"><a href="{{path('concept', {'aoe': area_of_expertise.url, 'concept': prev.id})}}">&nbsp; {{'concept.PREVIOUS'|trans}}<BR />< {{prev.nameForLang(app.request.locale).textFormatted|format_text(prev.nameForLang(app.request.locale).format_type)|raw}}</a></div>
            {% endif %}
            {% if next != null %}
            <div class="col-md-6 pull-right text-right"><a href="{{path('concept', {'aoe': area_of_expertise.url, 'concept': next.id})}}">{{'concept.NEXT'|trans}} &nbsp;<BR />{{next.nameForLang(app.request.locale).textFormatted|format_text(next.nameForLang(app.request.locale).format_type)|raw}} ></a></div>
            {% endif %}
        </div>
        <hr />
        <h2 style="margin-top: 0;"><strong>{{concept.nameForLang(app.request.locale).textFormatted|format_text(concept.nameForLang(app.request.locale).format_type)|striptags|raw}}</strong><hr /></h2>
        <div class="row text-justify">
            <div class="col-md-6">
                {% include 'VispanlabSiteBundle:ConceptLibrary:concept_block.html.twig' with {
                    'concept': concept,
                    'method': 'definition',
                    'block_name' : ('concept.DEFINITION'|trans),
                    'locale': app.request.locale,
                    'extraLocales': concept.nameLangs,
                } %}
                {% include 'VispanlabSiteBundle:ConceptLibrary:concept_block.html.twig' with {
                    'concept': concept,
                    'method': 'alternativeDefinitions',
                    'block_name' : ('concept.ALTERNATIVE_DEFINITIONS'|trans),
                    'locale': app.request.locale,
                } %}
                {% include 'VispanlabSiteBundle:ConceptLibrary:concept_block.html.twig' with {
                    'concept': concept,
                    'method': 'relatedConcepts',
                    'block_name' : ('concept.RELATED_CONCEPTS'|trans),
                    'links_convert': { 'separator': '/', 'locale': app.request.locale, 'route_name': 'concept', 'route_id_name': 'concept', 'extra_params': {'aoe': area_of_expertise.url} },
                    'locale': app.request.locale,
                } %}
            </div>
            <div class="col-md-6">
                {% set addedDefs = [] %}
                {% for def in concept.getDefinitionForOtherLang(app.request.locale) %}
                    {% include 'VispanlabSiteBundle:ConceptLibrary:concept_block.html.twig' with {
                        'concept': concept,
                        'method': 'definition',
                        'block_name' : (concept.nameForLang(def.locale).textFormatted|format_text(concept.nameForLang(def.locale).format_type)|striptags),
                        'locale': def.locale,
                        'showFlags': false,
                        'extraClasses': 'linked',
                        'initialDisplay': 'none',
                    } %}
                    {% set addedDefs = addedDefs|merge([def.locale]) %}
                {% endfor %}
                {# Hack to add names for Concepts without definition in that language #}
                {% for def in concept.getNameForOtherLang(app.request.locale) if def.locale not in addedDefs %}
                    {% include 'VispanlabSiteBundle:ConceptLibrary:concept_block.html.twig' with {
                        'concept': concept,
                        'method': 'name',
                        'fakeMethod': 'definition',
                        'block_name' : (concept.nameForLang(def.locale).textFormatted|format_text(concept.nameForLang(def.locale).format_type)|striptags),
                        'locale': def.locale,
                        'showFlags': false,
                        'extraClasses': 'linked',
                        'initialDisplay': 'none',
                    } %}
                {% endfor %}
                {# END Hack to add names for Concepts without definition in that language #}
                {% include 'VispanlabSiteBundle:ConceptLibrary:concept_block.html.twig' with {
                    'concept': concept,
                    'method': 'media',
                    'block_name' : ('concept.MEDIA'|trans),
                    'locale': app.request.locale,
                } %}
                {% include 'VispanlabSiteBundle:ConceptLibrary:concept_block.html.twig' with {
                    'concept': concept,
                    'method': 'commentsAsDefinition',
                    'block_name' : ('concept.COMMENTS'|trans),
                    'locale': app.request.locale,
                    'showFlags': false,
                } %}
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="imagemodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-body text-center">
        <img src="" id="imagepreview">
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block search_js %}{% endblock %}

{% block javascripts %}
{{parent()}}
<script src="{{asset('bundles/sonataadmin/vendor/bootstrap/js/transition.js')}}"></script>
<script src="{{asset('bundles/sonataadmin/vendor/bootstrap/js/collapse.js')}}"></script>
<script src="{{asset('js/vendor/jquery.elevatezoom.js')}}"></script>
<script>
    $(document).ready(function() {
        $('.concept-details-block').on('hide.bs.collapse', function (e) {
            $(this).parent().find('.collapse-arrows-wrapper i').removeClass('fa-angle-double-up');
            $(this).parent().find('.collapse-arrows-wrapper i').addClass('fa-angle-double-down');
        });
        $('.concept-details-block').on('show.bs.collapse', function (e) {
            $(this).parent().find('.collapse-arrows-wrapper i').removeClass('fa-angle-double-down');
            $(this).parent().find('.collapse-arrows-wrapper i').addClass('fa-angle-double-up');
        });
        $('.switch-lang').on('click.switch-lang', function(e) {
            var curLang = $(this).parent().parent().parent().parent().find('.lang-block:visible').attr('data-lang');
            var curMethod = $(this).parent().parent().parent().parent().parent().attr('data-method');
            var newLang = $(this).attr('data-lang');
            // 1. Show all flags, 2. Hide the clicked flag, 3. Show the current locale flag
            if($('.default-lang-'+newLang+'.linked[data-method="'+curMethod+'"]').size() <= 0) {
                var $defaultLocaleFlag = $(this).parent().parent().find('.switch-lang.flag-icon-{{langFlags[app.request.locale]}}').parent();
                $(this).parent().parent().find('li').show();
                $(this).parent().hide();
                if($(this).parent().is($defaultLocaleFlag)) {
                    $defaultLocaleFlag.hide();
                } else {
                    $defaultLocaleFlag.show();
                }
            }
            // Handle the language switch
            if(curLang !== newLang && $('.default-lang-'+newLang+'.linked[data-method="'+curMethod+'"]').size() > 0) {
                if($('.default-lang-'+newLang+'.linked[data-method="'+curMethod+'"]').is(':visible')) {
                    $('.default-lang-'+newLang+'.linked[data-method="'+curMethod+'"]').fadeOut();
                    $('.default-lang-'+newLang+'.linked[data-method="'+curMethod+'"]').find('.collapse').collapse('hide');
                } else {
                    $('.default-lang-'+newLang+'.linked[data-method="'+curMethod+'"]').fadeIn();
                    $('.default-lang-'+newLang+'.linked[data-method="'+curMethod+'"]').find('.collapse').collapse('show');
                }
            } else if(curLang !== newLang) {
                $(this).parent().parent().parent().parent().find('.lang-block').hide();
                $(this).parent().parent().parent().parent().find('.lang-'+newLang).fadeIn();
            }
            e.preventDefault();
            return false;
        });
        $("[data-method='media'] img").each(function() { $(this).attr('data-zoom-image', $(this).parent().attr('href')); });
        $("[data-method='media'] img").elevateZoom({
            zoomWindowPosition: 11,
            scrollZoom : true,
            zoomWindowHeight:600,
            cursor: "pointer",
            tint:true,
            tintColour:'#CCC',
            tintOpacity:0.5
        });
        $("[data-method='media'] img").on("click", function(e) {
           $('#imagepreview').attr('src', $(this).parent().attr('href')); // here asign the image to the modal when the user click the enlarge link
           $('#imagemodal').modal('show'); // imagemodal is the id attribute assigned to the bootstrap modal, then i use the show function
           e.preventDefault();
           return false;
        });
    });
    // Search
    $(document).ready(function() {
        var updateSearchResults = function() {
            var $input = UpperCaser.toUpper($.trim($('.concept-search-form input[type="text"]').val()));
            if($input.length > 0) {
                $('.concept-search-form').off('submit');
                $('.concept-search-form').submit();
            }
        };
        $('.sidebar-form').submit(updateSearchResults);

        $('.concept-search-form input[type="text"]').typeahead({
            source: [
                {% for concept in area_of_expertise.sortedConcepts(app.request.locale) %}"{{concept.nameForLang(app.request.locale).textFormatted|format_text(concept.nameForLang(app.request.locale).format_type)|striptags|replace({'&amp;': '&'})|e('js')|raw}}"{% if not loop.last %},{% endif %}{% endfor %}
            ],
            afterSelect: updateSearchResults
        });
    });
</script>
{% endblock %}